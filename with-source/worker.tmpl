bootstrap.servers=${bootstrap_server}

internal.key.converter=org.apache.kafka.connect.json.JsonConverter
internal.value.converter=org.apache.kafka.connect.json.JsonConverter
internal.key.converter.schemas.enable=false
internal.value.converter.schemas.enable=false

key.converter=org.apache.kafka.connect.json.JsonConverter
value.converter=io.confluent.connect.avro.AvroConverter
value.converter.basic.auth.credentials.source=USER_INFO
value.converter.schema.registry.basic.auth.user.info=${schema_registry_cluster_key}:${schema_registry_cluster_secret}
value.converter.schema.registry.url=${schema_registry_cluster_endpoint}

group.id=connect-distributed
client.id=connect-distributed

config.storage.topic=connect-configs
offset.storage.topic=connect-offsets
status.storage.topic=connect-status

rest.advertised.host.name=connect
rest.advertised.port=8083

sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule   required username='${kafka_cluster_key}'   password='${kafka_cluster_secret}';
security.protocol=SASL_SSL
sasl.mechanism=PLAIN

plugin.path=${fully_qualified_path}/with-source/confluent-7.3.0/share/java,${fully_qualified_path}/with-source/plugins

producer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule   required username='${kafka_cluster_key}'   password='${kafka_cluster_secret}';
producer.security.protocol=SASL_SSL
producer.sasl.mechanism=PLAIN

consumer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule   required username='${kafka_cluster_key}'   password='${kafka_cluster_secret}';
consumer.security.protocol=SASL_SSL
consumer.sasl.mechanism=PLAIN